#!/usr/bin/python
# -*- coding: utf-8 -*-
import uuid
import datetime
from uuid import UUID
from uuid import uuid4
from django.db import models
from django.contrib.auth.models import User
from django_extensions.db.fields import UUIDField


class PayuDetails(models.Model):
    """ PayU response needed fields for our requirement when payu success """
    PAY_MODE = (('CC', 'Credit card'), ('DC', 'Debit Card'),
                ('NB', 'NetBanking'), ('CASH', 'Cash Card'),
                ('EMI', 'EMI'), ('IVR', 'IVR'), ('COD', 'Cash On Delivery'))
    mihpayid = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='It is a unique reference number \
        created for each transaction at PayU’s end',
        verbose_name='PayU Id',)
    mode = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='Payment category',
        verbose_name='Payment mode',
        choices=PAY_MODE,)
    status = models.CharField(
        max_length=20,
        null=True,
        blank=True,
        help_text='Transction Status',
        verbose_name='Transction Status',)
    txnid = models.CharField(
        max_length=50,
        null=True,
        blank=True,
        help_text='transaction ID value posted by the merchant during \
                   the transaction request.',
        verbose_name='Transction ID',)
    key = models.CharField(
        max_length=50,
        null=True,
        blank=True,
        help_text='merchant key for the merchant’s account at PayU',
        verbose_name='Merchant key',)
    amount = models.FloatField(
        default=0.0,
        null=True,
        blank=True,
        help_text='original amount which was sent in the transaction \
                   request by the merchant',
        verbose_name='Original amount',)
    discount = models.FloatField(
        default=0.0,
        null=True,
        blank=True,
        help_text='Discount given to user',
        verbose_name='Discount Amount',)
    productinfo = models.CharField(
        max_length=500,
        null=True,
        blank=True,
        help_text='Product details',
        verbose_name='Product details',)
    hash_key = models.CharField(
        max_length=500,
        null=True,
        blank=True,
        help_text='This is account reference',
        verbose_name='Hash Key',)
    error_Message = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='Error message for failure transaction.\
                   Code provide by Banks',
        verbose_name='Error Message')
    bank_code = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='code indicating the payment option used \
                   for the transaction',
        verbose_name='Bank Code')
    pg_type = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='payment gateway used for the transaction',
        verbose_name='Payment Gateway')
    band_ref_number = models.CharField(
        max_length=100,
        null=True,
        blank=True,
        help_text='bank reference number generated by the bank',
        verbose_name='Reference number')

    def __unicode__(self):
        return self.mihpayid

    class Meta:
        verbose_name = "Payu Information"
        verbose_name_plural = "Payu Informations"
